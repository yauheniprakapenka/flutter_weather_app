// Mocks generated by Mockito 5.1.0 from annotations
// in domain/test/src/test_helpers/mocks/repositories.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:domain/src/entities/failure.dart' as _i5;
import 'package:domain/src/location/entities/coordinates.dart' as _i7;
import 'package:domain/src/weather/entities/forecast.dart' as _i8;
import 'package:domain/src/weather/entities/weather.dart' as _i6;
import 'package:domain/src/weather/repositories/i_weather_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IWeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWeatherRepository extends _i1.Mock
    implements _i3.IWeatherRepository {
  MockIWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>> getTodayWeather(
          _i7.Coordinates? coordinates) =>
      (super.noSuchMethod(Invocation.method(#getTodayWeather, [coordinates]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Weather>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Weather>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>> refreshTodayWeather(
          _i7.Coordinates? coordinates) =>
      (super.noSuchMethod(
              Invocation.method(#refreshTodayWeather, [coordinates]),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.Weather>>.value(
                  _FakeEither_0<_i5.Failure, _i6.Weather>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Weather>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Forecast>> getFiveDaysWeatherForecast(
          _i7.Coordinates? coordinates) =>
      (super.noSuchMethod(
              Invocation.method(#getFiveDaysWeatherForecast, [coordinates]),
              returnValue: Future<_i2.Either<_i5.Failure, _i8.Forecast>>.value(
                  _FakeEither_0<_i5.Failure, _i8.Forecast>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i8.Forecast>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i8.Forecast>>
      refreshFiveDaysWeatherForecast(_i7.Coordinates? coordinates) =>
          (super.noSuchMethod(
              Invocation.method(#refreshFiveDaysWeatherForecast, [coordinates]),
              returnValue: Future<_i2.Either<_i5.Failure, _i8.Forecast>>.value(
                  _FakeEither_0<_i5.Failure, _i8.Forecast>())) as _i4
              .Future<_i2.Either<_i5.Failure, _i8.Forecast>>);
}
